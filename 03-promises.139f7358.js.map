{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEaC,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAAsBC,G,kBAKlB,IAAIC,EAAWC,EAAI,EACbC,EAASC,OAAOC,EAAMC,OAASC,EAAKD,MAAQJ,GAiBtD,SAAuBD,EAAUI,GAC/B,OAAO,IAAIG,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAER,WAAUI,UAEpBK,EAAO,CAAET,WAAUI,S,GAEpBA,E,KAzBHU,CAAcd,EAAUE,GAAQa,MAC9B,SAAAV,GACEW,EAAAtB,GAASuB,OAAOC,QAAQ,uBAAwCC,OAAfnB,EAAS,QAAamB,OAAPjB,EAAO,M,IAEzE,SAAAkB,GACEJ,EAAAtB,GAASuB,OAAOI,QAAQ,sBAAqCF,OAAfnB,EAAS,QAAamB,OAAPjB,EAAO,M,KAZ1EH,EAAMuB,iBAGN,IAFA,IAA+BC,EAAAxB,EAAMyB,cAAcC,SAA5CrB,EAAwBmB,EAAxBnB,MAAOE,EAAiBiB,EAAjBjB,KAAMoB,EAAWH,EAAXG,OAEXC,EAAI,EAAGA,EAAID,EAAOrB,MAAOsB,IAAGC,EAAAD,GAarC5B,EAAMyB,cAAcK,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(event) {\n  event.preventDefault();\n  const{ delay, step, amount } = event.currentTarget.elements;\n\n  for (let i = 0; i < amount.value; i++){\n    let position = i + 1;\n    const delays = Number(delay.value) + step.value * i;\n\n    createPromise(position, delays).then(\n      value => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delays}ms`); // \"Success! Value passed to resolve function\"\n      },\n      error => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delays}ms`); // \"Error! Error passed to reject function\"\n      }\n    );\n  } \n  event.currentTarget.reset();\n}\n\n\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n"],"names":["$6JpON","parcelRequire","document","querySelector","addEventListener","event","position","i","delays","Number","delay","value","step","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$createPromise","then","$parcel$interopDefault","Notify","success","concat","error","failure","preventDefault","_elements","currentTarget","elements","amount","i1","_loop","reset"],"version":3,"file":"03-promises.139f7358.js.map"}